@top Program { Sentence* }
// @external tokens TakeInput from "./externalTokens" { TakeInput }


Sentence {
    WaterproofTactic |
    WaterproofByTactic |
    Lemma
}

@skip { space | Comment}


// Define local token for tactics, whatever is not TacticEnd 
// is just TacticInput
@local tokens {
    TacticEnd[@name='dotSpace'] { '.' }
    @else TacticInput
}

// Skip WaterproofTactics
@skip {} {
    WaterproofTactic { 
        // Zero Input Tactics
        "Help" TacticEnd | 
        "We argue by contradiction" TacticEnd| 
        "Contradiction" TacticEnd| 
        "We show both statements"  TacticEnd| 
        "We show both directions" TacticEnd|
        // Single Input Tactics
        "Take " TacticInput TacticEnd |
        "We need to show that " TacticInput TacticEnd | 
        "We conclude that " TacticInput TacticEnd | 
        "Assume that " TacticInput TacticEnd |
        "Obtain such a " TacticInput TacticEnd | 
        "(& " TacticInput " )." | 
        "Obtain such a " TacticInput TacticEnd | 
        "It suffices to show that " TacticInput TacticEnd | 
        "It holds that " TacticInput TacticEnd | 
        "It holds that " TacticInput TacticEnd | 
        "We claim that " TacticInput TacticEnd | 
        "We use induction on " TacticInput TacticEnd | 
        "Indeed, " TacticInput TacticEnd |
        "Use " TacticInput TacticEnd |
        "Choose " TacticInput TacticEnd | 
        // Multi Input Tactics
        // TODO: Figure out approach for tactics with 2 or more TacticInput(s)
        "Expand the definition of " TacticInput " in " TacticInput TacticEnd | 
        // "By (" TacticInput ") it suffices to show that " TacticInput TacticEnd | 
        "Obtain " TacticInput " according to " TacticInput TacticEnd | 
        // "By (" TacticInput ") we conclude that " TacticInput TacticEnd | 
        // "By (" TacticInput ") it holds that " TacticInput TacticEnd | 
        "Define " TacticInput " := " TacticInput TacticEnd | 
        "Since (" TacticInput ") it holds that (" TacticInput ")." | 
        "Since (" TacticInput ") it holds that (" TacticInput ") (" TacticInput ")." | 
        "Since (" TacticInput ") we conclude that (" TacticInput ")." | 
        "Since (" TacticInput ") it suffices to show that (" TacticInput ")." |
        "Because (" TacticInput ") both (" TacticInput ") and (" TacticInput ")." | 
        "Because (" TacticInput ") both (" TacticInput ") (" TacticInput ") and (" TacticInput ") (" TacticInput ")." | 
        "Either (" TacticInput ") or (" TacticInput ")."
    }
}


// The method below works for the 'By' example of a two input tactic, Im pretty sure this can be merged back with the rest of the tactic above by modifying the local tokens.

// Define local token for tactics, whatever is not TacticEnd 
// is just TacticInput
@local tokens {
    TacticByEnd[@name='dotSpace'] { '.' }
    TacticByMiddle{" it suffices to show that " | " we conclude that " | " it holds that "}
    @else TacticByInput
}

// Skip WaterproofTactics
@skip {} {
    WaterproofByTactic {  
        "By " TacticByInput TacticByMiddle TacticByInput TacticByEnd | 
        "By " TacticByInput TacticByMiddle TacticByInput TacticByEnd | 
        "By " TacticByInput TacticByMiddle TacticByInput TacticByEnd 
    }
}

@local tokens {
    LemmaEnd[@name='dotSpace'] { '.'}
    @else LemmaStatement
}

// Skip Lemma
@skip {} {
    Lemma {
        "Lemma " LemmaStatement LemmaEnd 
    }
}

// Remaining tokens
@tokens {
    Comment { "(*" ![*]* "*)" }

    space { " " | "\t" | "\n" | "\r" }
    
}

@precedence {
    Lemma, WaterproofTactic
}

@detectDelim