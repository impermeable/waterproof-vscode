@top Program { Sentence* }

@skip { space | Comment }

Sentence {
    WaterproofTactic
    CoqSentence
}


@tokens {
    CommentOpen { "(*" }
    CommentClose { "*)" }
    CommentChar { !CommentClose }

    Comment { CommentOpen CommentChar* CommentClose }

    space { " " | "\t" | "\n" | "\r" }
    
    CoqSentence {
        ![.]+ "."
    }

    ConstrTerm {
        @asciiLetter+ | $[ℕℤℚℝℂ]
    }

    TacticInput {
        space? ConstrTerm space?
    }

    WaterproofTactic {
        "Help." | 
        "Take " TacticInput " : (" TacticInput ")." | 
        "We need to show that (" TacticInput ")." | 
        "We conclude that (" TacticInput ")." | 
        "Choose " TacticInput " := (" TacticInput ")." | 
        "Assume that (" TacticInput ")." | 
        "Assume that (" TacticInput ") (" TacticInput ")." | 
        "(& " TacticInput " )." | 
        "Obtain such a " TacticInput "." | 
        "Obtain " TacticInput " according to (" TacticInput ")." | 
        "It suffices to show that (" TacticInput ")." | 
        "By (" TacticInput ") it suffices to show that (" TacticInput ")." | 
        "It holds that (" TacticInput ") (" TacticInput ")." | 
        "It holds that (" TacticInput ")." | 
        "By (" TacticInput ") it holds that (" TacticInput ") (" TacticInput ")." | 
        "By (" TacticInput ") it holds that (" TacticInput ")." | 
        "We claim that (" TacticInput ")." | 
        "We claim that (" TacticInput ") (" TacticInput ")." | 
        "We argue by contradiction." | 
        "Contradiction." | 
        "Because (" TacticInput ") both (" TacticInput ") and (" TacticInput ")." | 
        "Because (" TacticInput ") both (" TacticInput ") (" TacticInput ") and (" TacticInput ") (" TacticInput ")." | 
        "Either (" TacticInput ") or (" TacticInput ")." | 
        "Expand the definition of " TacticInput " in (" TacticInput ")." | 
        "We show both statements." | 
        "We show both directions." | 
        "We use induction on " TacticInput "." | 
        "By (" TacticInput ") we conclude that (" TacticInput ")." | 
        "Define " TacticInput " := (" TacticInput ")." | 
        "Since (" TacticInput ") it holds that (" TacticInput ")." | 
        "Since (" TacticInput ") it holds that (" TacticInput ") (" TacticInput ")." | 
        "Since (" TacticInput ") we conclude that (" TacticInput ")." | 
        "Since (" TacticInput ") it suffices to show that (" TacticInput ")."
    }

}

@precedence {
    WaterproofTactic, CoqSentence, BlockComment
}

@detectDelim
