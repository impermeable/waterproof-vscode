@top Program { Sentence* }

Sentence {
    WaterproofTactic
    CoqSentence
}

@skip { space | Comment }

// Define local token for tactics, whatever is not TacticEnd 
// is just TacticInput
@local tokens {
    TacticEnd[@name='dotSpace'] { '.' space }
    @else TacticInput
}

// Skip WaterproofTactics
@skip {} {
    WaterproofTactic {
        "Help." | 
        "We argue by contradiction." | 
        "Contradiction." | 
        "We show both statements." | 
        "We show both directions." | 
        "We need to show that " TacticInput TacticEnd | 
        "We conclude that " TacticInput TacticEnd | 
        "Assume that " TacticInput TacticEnd | 
        "(& " TacticInput " )." | 
        "Obtain such a " TacticInput TacticEnd | 
        "It suffices to show that " TacticInput TacticEnd | 
        "It holds that " TacticInput TacticEnd | 
        "It holds that " TacticInput TacticEnd | 
        "We claim that " TacticInput TacticEnd | 
        "We use induction on " TacticInput TacticEnd | 
        // TODO: Figure out approach for tactics with 2 or more TacticInput(s)
        "Expand the definition of " TacticInput " in " TacticInput TacticEnd | 
        "By (" TacticInput ") it suffices to show that " TacticInput TacticEnd | 
        "Obtain " TacticInput " according to " TacticInput TacticEnd | 
        "Choose " TacticInput " :=" TacticInput TacticEnd | 
        "Take " TacticInput " : " TacticInput TacticEnd | 
        "By (" TacticInput ") we conclude that " TacticInput TacticEnd | 
        "By (" TacticInput ") it holds that " TacticInput TacticEnd | 
        "Define " TacticInput " := " TacticInput TacticEnd | 
        // TODO
        "Since (" TacticInput ") it holds that (" TacticInput ")." | 
        "Since (" TacticInput ") it holds that (" TacticInput ") (" TacticInput ")." | 
        "Since (" TacticInput ") we conclude that (" TacticInput ")." | 
        "Since (" TacticInput ") it suffices to show that (" TacticInput ")."
        "Because (" TacticInput ") both (" TacticInput ") and (" TacticInput ")." | 
        "Because (" TacticInput ") both (" TacticInput ") (" TacticInput ") and (" TacticInput ") (" TacticInput ")." | 
        "Either (" TacticInput ") or (" TacticInput ")."
    }
}

// Remaining tokens
@tokens {
    CommentOpen { "(*" }
    CommentClose { "*)" }
    CommentChar { !CommentClose }

    Comment { CommentOpen CommentChar* CommentClose }

    space { " " | "\t" | "\n" | "\r" }
    
    CoqSentence {
        ![.]+ "."
    }
}

@precedence {
    WaterproofTactic, CoqSentence, BlockComment
}

@detectDelim
