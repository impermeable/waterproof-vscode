{
  "name": "waterproof",
  "displayName": "Waterproof",
  "description": "Waterproof for VSC",
  "version": "0.9.14",
  "requiredCoqLspVersion": "==0.1.8",
  "requiredCoqWaterproofVersion": "==2.1.0",
  "contributors": [
    "Collin Harcarik <collin@plutode.com>",
    "Milo Goolkate <milo@goolkate.com>",
    "Pieter Wils aka Gangster <p.f.e.j.wils@student.tue.nl>",
    "Jim Portegies <j.w.portegies@tue.nl>"
  ],
  "publisher": "waterproof-tue",
  "license": "LGPL-2.1-only",
  "icon": "Waterproofdruppel128.png",
  "engines": {
    "vscode": "^1.73.0"
  },
  "categories": [
    "Programming Languages",
    "Education"
  ],
  "keywords": [
    "interactive theorem proving",
    "dependent types",
    "coq",
    "software verification"
  ],
  "homepage": "https://impermeable.github.io/",
  "repository": {
    "type": "git",
    "url": "https://github.com/impermeable/waterproof-vscode"
  },
  "activationEvents": [
    "onCommand:waterproof.start",
    "onCommand:waterproof.toggle",
    "onCommand:waterproof.newWaterproofDocument",
    "onLanguage:coq",
    "onLanguage:coqmarkdown"
  ],
  "contributes": {
    "iconThemes": [
      {
        "id": "waterproof-icons",
        "label": "Waterproof",
        "path": "./fileicons/waterproof-icon-theme.json"
      }
    ],
    "customEditors": [
      {
        "viewType": "coqEditor.coqEditor",
        "displayName": "Waterproof Editor",
        "selector": [
          {
            "filenamePattern": "*.{mv,v}"
          }
        ]
      }
    ],
    "languages": [
      {
        "id": "coq",
        "aliases": [
          "Coq",
          "coq",
          "Gallina",
          "gallina"
        ],
        "extensions": [
          ".v",
          ".mv"
        ]
      },
      {
        "id": "coqmarkdown",
        "aliases": [
          "Coq Markdown"
        ],
        "extensions": [
          ".mv"
        ]
      }
    ],
    "commands": [
      {
        "command": "waterproof.openTutorial",
        "category": "Waterproof",
        "title": "Open Tutorial"
      },
      {
        "command": "waterproof.pathSetting",
        "category": "Waterproof",
        "title": "Change Waterproof Path"
      },
      {
        "command": "waterproof.newWaterproofDocument",
        "title": "Waterproof: Create new waterproof document",
        "shortTitle": "New waterproof document"
      },
      {
        "command": "waterproof.start",
        "title": "Waterproof: Start the document checker"
      },
      {
        "command": "waterproof.stop",
        "title": "Waterproof: Stop the document checker"
      },
      {
        "command": "waterproof.restart",
        "title": "Waterproof: Restart the document checker"
      },
      {
        "command": "waterproof.exportExerciseSheet",
        "title": "Waterproof: Save as exercise sheet"
      }
    ],
    "menus": {
      "file/newFile": [
        {
          "command": "waterproof.newWaterproofDocument",
          "group": "file",
          "when": "!virtualWorkspace"
        }
      ]
    },
    "keybindings": [
      {
        "command": "waterproof.goals",
        "key": "alt+enter",
        "mac": "meta+enter",
        "when": "editorTextFocus && editorLangId == coq || editorTextFocus && editorLangId == coqmarkdown"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "waterproofFunc",
          "title": "Waterproof",
          "icon": "./resources/druppel.svg"
        }
      ]
    },
    "views": {
      "waterproofFunc": [
        {
          "type": "webview",
          "id": "sidePanel",
          "name": ""
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "waterproof.setup",
        "title": "Waterproof Initial Setup",
        "description": "Interactive guide to get up and running with Waterproof",
        "steps": [
          {
            "id": "install-dependencies",
            "when": "!(isWindows || isMac) || hasRemoteServer",
            "title": "Installing Dependencies",
            "description": "Waterproof needs additional software to function.\nSee the README for instructions.\n[README](https://github.com/impermeable/waterproof-vscode)",
            "completionEvents": [
              "onLink:https://github.com/impermeable/waterproof-vscode"
            ],
            "media": {
              "markdown": "walkthrough-data/initial-setup/installation-without-installer.md"
            }
          },
          {
            "id": "download-installer-windows",
            "when": "isWindows && !hasRemoteServer",
            "title": "Downloading the Installer",
            "description": "Download the installer using the button below\n[Download the installer](https://www.github.com/impermeable/waterproof-dependencies-installer/releases/latest)\nOr, if manual installation is preferred, follow the steps in the README for your platform.\n[README](https://github.com/impermeable/waterproof-vscode)",
            "completionEvents": [
              "onLink:https://www.github.com/impermeable/waterproof-dependencies-installer/releases/latest"
            ],
            "media": {
              "markdown": "walkthrough-data/initial-setup/download-installer-windows.md"
            }
          },
          {
            "id": "download-installer-mac",
            "when": "isMac && !hasRemoteServer",
            "title": "Downloading the Installer",
            "description": "Download the installer using the button below\n[Download the installer](https://www.github.com/impermeable/waterproof-dependencies-installer/releases/latest)\nOr, if manual installation is preferred, follow the steps in the README for your platform.\n[README](https://github.com/impermeable/waterproof-vscode)",
            "completionEvents": [
              "onLink:https://www.github.com/impermeable/waterproof-dependencies-installer/releases/latest"
            ],
            "media": {
              "markdown": "walkthrough-data/initial-setup/download-installer-mac.md"
            }
          },
          {
            "title": "Configuring Waterproof Settings (Path)",
            "when": "isWindows && !hasRemoteServer",
            "id": "configure-settings-windows",
            "description": "Change the [Waterproof.Path](command:waterproof.pathSetting) setting.\n[Use Default](command:waterproof.defaultPath)\n[Change Setting](command:waterproof.pathSetting)",
            "completionEvents": [
              "onSettingChanged:waterproof.path"
            ],
            "media": {
              "markdown": "walkthrough-data/initial-setup/change-setting-path-windows.md"
            }
          },
          {
            "title": "Configuring Waterproof Settings (Path)",
            "when": "isMac && !hasRemoteServer",
            "id": "configure-settings-mac",
            "description": "Change the [Waterproof.Path](command:waterproof.pathSetting) setting.\n[Use Default](command:waterproof.defaultPath)\n[Change Setting](command:waterproof.pathSetting)",
            "completionEvents": [
              "onSettingChanged:waterproof.path"
            ],
            "media": {
              "markdown": "walkthrough-data/initial-setup/change-setting-path-mac.md"
            }
          },
          {
            "title": "Configuring Waterproof Settings (Path)",
            "when": "!(isWindows || isMac) || hasRemoteServer",
            "id": "configure-settings-linux",
            "description": "Change the [Waterproof.Path](command:waterproof.pathSetting) setting.\n[Use Default](command:waterproof.defaultPath)\n[Change Setting](command:waterproof.pathSetting)",
            "completionEvents": [
              "onSettingChanged:waterproof.path"
            ],
            "media": {
              "markdown": "walkthrough-data/initial-setup/change-setting-path-linux.md"
            }
          },
          {
            "title": "Configuring Waterproof Settings (Args)",
            "when": "isMac",
            "id": "configure-settings-args-mac",
            "description": "Change the [Waterproof.Args](command:waterproof.argsSetting) setting.\n[Use Default](command:waterproof.defaultArgsMac)\n[Change Setting](command:waterproof.argsSetting)",
            "completionEvents": [
              "onSettingChanged:waterproof.args"
            ],
            "media": {
              "markdown": "walkthrough-data/initial-setup/change-setting-args.md"
            }
          },
          {
            "title": "Restart Waterproof",
            "id": "restart-waterproof",
            "description": "To determine whether Waterproof found everything it needs we need to restart it using the button below.\n[Restart](command:waterproof.start)",
            "completionEvents": [
              "onCommand:waterproof.start"
            ],
            "media": {
              "markdown": "walkthrough-data/initial-setup/restart.md"
            }
          },
          {
            "title": "Waterproof Tutorial",
            "id": "open-tutorial",
            "description": "Open the Waterproof tutorial to start learning.\n[Open Tutorial](command:waterproof.openTutorial)",
            "completionEvents": [
              "onCommand:waterproof.openTutorial"
            ],
            "media": {
              "markdown": "walkthrough-data/initial-setup/tutorial.md"
            }
          }
        ]
      }
    ],
    "configuration": [
      {
        "title": "User Mode",
        "properties": {
          "waterproof.teacherMode": {
            "type": "boolean",
            "default": false,
            "description": "Enable teacher mode; if true, allows user to edit all content outside input fields."
          }
        }
      },
      {
        "title": "Waterproof Use Case",
        "properties": {
          "waterproof.standardCoqSyntax": {
            "type": "boolean",
            "default": false,
            "description": "Enable Standard Coq syntax; if true, standard Coq syntax will be used instead of the Waterproof proof language."
          },
          "waterproof.enforceCorrectNonInputArea": {
            "type": "boolean",
            "default": true,
            "description": "Enable correctness checks for non input areas. Will enforce that the content outside of an input area never changes!"
          }
        }
      },
      {
        "title": "Diagnostics",
        "type": "object",
        "properties": {
          "waterproof.eager_diagnostics": {
            "type": "boolean",
            "default": true,
            "description": "Send diagnostics as document is processed; if false, diagnostics are only sent when Coq finishes processing the file"
          },
          "waterproof.show_coq_info_messages": {
            "type": "boolean",
            "default": false,
            "description": "Show Coq's \"Info\" messages as diagnostics, such as 'foo has been defined.' and miscellaneous operational messages."
          },
          "waterproof.show_notices_as_diagnostics": {
            "type": "boolean",
            "default": false,
            "description": "Show Coq's \"Notice\" messages as diagnostics, such as `About` and `Search` output."
          },
          "waterproof.max_errors": {
            "type": "number",
            "default": 150,
            "description": "Maximum number of errors per file, after that, coq-lsp will stop checking the file."
          }
        }
      },
      {
        "title": "Goals and Info Panel",
        "type": "object",
        "properties": {
          "waterproof.goal_after_tactic": {
            "type": "boolean",
            "default": false,
            "description": "When showing goals and the cursor is in a tactic, if false, show goals before executing the tactic, if true, show goals after"
          },
          "waterproof.pp_type": {
            "type": "number",
            "default": 1,
            "description": "Method to Print Coq Terms",
            "enum": [
              0,
              1,
              2
            ],
            "enumDescriptions": [
              "Print to string",
              "Use jsCoq's Pp rich layout printer",
              "Coq Layout Engine (experimental)"
            ]
          }
        }
      },
      {
        "title": "Language Server Binary",
        "type": "object",
        "properties": {
          "waterproof.trace.server": {
            "scope": "window",
            "type": "string",
            "enum": [
              "off",
              "messages",
              "verbose"
            ],
            "default": "messages",
            "description": "Traces the communication between VS Code and the language server."
          },
          "waterproof.debug": {
            "type": "boolean",
            "default": false,
            "description": "Enable Debug in Coq Server, usually this will produce backtraces on errors"
          },
          "waterproof.path": {
            "type": "string",
            "default": "coq-lsp",
            "description": "Path to the coq-lsp binary, by default, search in PATH"
          },
          "waterproof.args": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "description": "Arguments to the coq-lsp server"
          }
        }
      },
      {
        "title": "Proof Checking",
        "type": "object",
        "properties": {
          "waterproof.admit_on_bad_qed": {
            "type": "boolean",
            "default": true,
            "description": "If a `Qed.` command fails, admit the proof automatically."
          }
        }
      },
      {
        "title": "Input",
        "type": "object",
        "properties": {
          "waterproof.unicode_completion": {
            "type": "string",
            "default": "normal",
            "enum": [
              "off",
              "normal",
              "extended"
            ],
            "description": "Enable Server-Side Unicode Completion. Coq-lsp provides two character sets, a regular one, and an extended one with more than 1000 symbols."
          }
        }
      },
      {
        "title": "Editor",
        "type": "object",
        "properties": {
          "waterproof.updateIgnores": {
            "type": "boolean",
            "default": true,
            "description": "Automatically ignore Coq object files in the workspace (.vo, .vos, ...)"
          }
        }
      }
    ]
  },
  "devDependencies": {
    "@lezer/generator": "^1.2.3",
    "@types/glob": "^7.1.1",
    "@types/jest": "^29.5.1",
    "@types/jquery": "^3.5.16",
    "@types/mocha": "^10.0.1",
    "@types/node": "^16.11.7",
    "@types/object-hash": "^3.0.2",
    "@types/react": "^18.0.27",
    "@types/react-dom": "^18.0.10",
    "@types/throttle-debounce": "^5.0.0",
    "@types/vscode": "^1.73.0",
    "@types/vscode-webview": "^1.57.1",
    "@vscode/test-electron": "^2.3.0",
    "@vscode/vsce": "^2.21.0",
    "esbuild": "^0.16.13",
    "fs-extra": "^11.1.1",
    "glob": "^7.1.4",
    "jest": "^29.5.0",
    "mocha": "^10.2.0",
    "prettier": "^2.8.1",
    "ts-jest": "^29.1.0",
    "typescript": "^5.1.3",
    "vscode-extension-tester": "^5.6.0"
  },
  "dependencies": {
    "@benrbray/prosemirror-math": "^1.0.0",
    "@codemirror/autocomplete": "^6.7.1",
    "@codemirror/commands": "^6.2.4",
    "@codemirror/language": "^6.6.0",
    "@codemirror/lint": "^6.4.1",
    "@codemirror/view": "^6.11.0",
    "@lezer/highlight": "^1.1.6",
    "@lezer/lr": "^1.3.5",
    "@types/double-ended-queue": "^2.1.2",
    "@types/markdown-it": "^12.2.3",
    "@vscode/webview-ui-toolkit": "^1.2.1",
    "eventemitter2": "6.4.9",
    "jquery": "^3.7.0",
    "katex": "^0.16.10",
    "markdown-it": "^13.0.1",
    "object-hash": "^3.0.0",
    "prosemirror-commands": "^1.1.7",
    "prosemirror-inputrules": ">=1.1.2",
    "prosemirror-keymap": "^1.1.4",
    "prosemirror-markdown": "^1.11.0",
    "prosemirror-model": "^1.13.3",
    "prosemirror-state": "^1.3.4",
    "prosemirror-transform": "^1.2.12",
    "prosemirror-view": "^1.18.2",
    "punycode": "^2.3.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-rnd": "^10.4.1",
    "react-tooltip": "^5.13.1",
    "throttle-debounce": "^5.0.0",
    "vscode-languageclient": "^8.1.0",
    "vscode-languageserver-types": "^3.17.3"
  },
  "main": "./out/src/mainNode.js",
  "browser": "/out/src/mainBrowser.js",
  "scripts": {
    "vscode:prepublish": "npm run typecheck && npm run esbuild -- --minify --sourcemap=no",
    "esbuild": "node esbuild.mjs",
    "esbuild-test": "node esbuild-test.mjs",
    "typecheck": "tsc -b",
    "compile": "npm run esbuild",
    "compile-test": "npm run clean; tsc -p test/tsconfig.json && npm run esbuild-test && npm run test-package",
    "watch": "npm run lezer-generator && npm run esbuild -- --watch",
    "test": "npm run compile-test && node ./test_out/test/runTest.js",
    "test-package": "node_modules/.bin/vsce package --ignoreFile .vscodeignore -o test_out/extension.vsix",
    "clean": "rm -R test_out/*; rm -R editor_output/*; rm -R out/*",
    "package": "npm run clean && npm run test-package",
    "unit-tests": "npx jest",
    "lezer-generator": "npx lezer-generator ./editor/src/kroqed-editor/codeview/lang-pack/syntax.grammar -o ./editor/src/kroqed-editor/codeview/lang-pack/syntax.js"
  }
}
